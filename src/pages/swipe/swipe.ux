<template>
	<div class="page" style="flex-direction: column;">

	  <list class="list">

		  <list-item class="item {{onSelect==2?'item2':''}}" @click="select('2')" type="item">
			<div class="item-content">
				<text class="itemtext">上下滑动</text>
				<text class="itemtext2">仅上下滑动翻页</text>
			</div>
			  <img src="/common/images/check.png" style="width:40px;height: 40px;" if="{{onSelect==2}}"/>
		  </list-item>

		  <list-item class="item {{onSelect==3?'item2':''}}" @click="select('3')" type="item">
			<div class="item-content">
				<text class="itemtext">点击翻页</text>
				<marquee class="itemtext2">点击上下半屏翻页</marquee>
			</div>
			<img src="/common/images/check.png" style="width:40px;height: 40px;" if="{{onSelect==3}}"/>
		  </list-item>

	  </list>
	  <text style="position: absolute;top:-100px;left:0px;">{{txtNum}}</text>

		<img static src="/common/images/back.png" @click="back" style="position: absolute;left: 45px;top: 6px;width: 102px;height: 72px;"/>
		<img static src="/common/images/info.png" @click="routerTo('info')" style="position: absolute;left: 45px;top: 412px;width: 102px;height: 72px;"/>
	</div>
  </template>

  <script>
  import router from '@system.router'
  import storage from '../../common/storage.js'
  import app from '@system.app'

  export default {
	  // ÷﹢‐+-＋－×÷％
	// 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
	private: {
		// columnSwipe:"/common/images/false.png",
		// rowSwipe:"/common/images/false.png",
		// close:"/common/images/false.png",
		onSelect:3,
		txtNum:0,
		nowTime: "00:00",
		timer: null
	},
	protected: {
	  cPath: '',
		name: ''
	},
	updateTime() {
		const date = new Date();
		let hours = date.getHours();
		let minutes = date.getMinutes();

		// 格式化小时和分钟为两位数
		hours = hours < 10 ? '0' + hours : hours;
		minutes = minutes < 10 ? '0' + minutes : minutes;

		this.nowTime = `${hours}:${minutes}`;
	},
	onInit() {
		this.updateTime();
		this.timer = setInterval(() => {
			this.updateTime();
		}, 1000);
	},
	onDestroy(){
		clearInterval(this.timer);
	},
	onReady(){
		// this.resetList();
	},
	resetList(){

	},
	onShow(){
	  var that = this;
	  storage.get({
		  key: 'EBOOK_SWIPE',
		  success: function(data) {
			if (data=="off") {
				that.onSelect=3
			} else if(data=="column") {
				that.onSelect=2
			} else if(data=="row") {
				that.onSelect=1
			}
			that.updateScene();
		  },
		  fail: function(data, code) {
			////console.log(`handling fail, code = ${code}`)
		  }
	  })
	},
	onBackPress(){
		//console.log('onBackPress');
		// this.resetList();
	},

	select(fun){
	  if (fun=='2'){
		  	if(this.onSelect!=2){
				this.onSelect=2
			  storage.set({
	  			key: 'EBOOK_SWIPE',
	  			value: 'column',
	  		})
			}
	  }else if(fun=='1'){
		  	if(this.onSelect!=1){
				this.onSelect=1
			  storage.set({
	  			key: 'EBOOK_SWIPE',
	  			value: 'row',
	  		})
			}
	  }else{
			if(this.onSelect!=3){
				this.onSelect=3
			  storage.set({
	  			key: 'EBOOK_SWIPE',
	  			value: 'off',
	  		})
			}
	  }
	  this.updateScene();
	},

	selectFile(item){
		router.push({
		  uri: '/pages/detail'
		})
	},
	routerTo(url) {
	  // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由
	  router.push({
		uri: '/pages/' + url
	  })
	},
	back(){
		router.back();
	},
	exit(){
		app.terminate();
	},
	updateScene(){
		this.txtNum += 1;
	}
  }
  </script>

  <style>
  .page {
	  width: 192px;
	  height: 490px;
	  background-color: #000000;
  }

  /* 更多信息样式 */
  .more-info {
	width: 191px;
	background-color: rgb(0,0,0);
  }

  .caltext {
	  width: 180px;
	  lines: 4;
	  text-overflow: clip;
	  font-size: 30px;
	  color: rgb(255,255,255);
	  text-align: left;
	  height: 160px;
  }

  .list {
	width: 192px;
	height: 490px;
	position: absolute;
	top:0px;
	left:0px;
  padding: 86px 6px;
	/* background-color: red; */
}

.item {
	width: 100%;
	height: 112px;
	padding: 14px 20px;
	margin-bottom: 8px;
	background-color: #262626;
	border-radius: 36px;
	/* flex-direction: column; */
	align-items: center;
  justify-content: space-between;
}

.item2 {
	background-color: #0D6EFF;
}

.itemtext {
	font-size: 24px;
	line-height:40px;
	width: 100%;
	font-weight: bold;
	color: white;
	text-overflow: ellipsis;
	lines: 1;
	/* padding-left:12px; */
	/* padding-right:12px; */
	/* padding-top:12px; */
}

.itemtext2 {
	font-size: 20px;
	line-height: 37px;
	/* width: 100%; */
	font-weight: bold;
	color: rgba(255,255,255,0.6);
	text-overflow: ellipsis;
	lines: 1;
	/* padding-right:12px; */
}


.item-content {
	height: 100%;
	flex:1;
	flex-direction: column;
	justify-content: space-between;
}


  .calbtn1 {
	  color: rgb(191,98,59);
	  font-size: 30px;
	  background-color: rgb(20,20,20);
	  border-radius: 15px;
	  margin: 4px;
  }

  .calbtn2 {
	  color: rgb(255,255,255);
	  font-size: 30px;
	  background-color: rgb(20,20,20);
	  border-radius: 15px;
	  margin: 4px;
  }

  .infos {
	  width: 296px;
	  text-align: center;
	  font-size: 26px;
	  line-height: 35px;
	  color: white;
	  padding: 4px;
	  text-overflow: ellipsis;
  }
  </style>
