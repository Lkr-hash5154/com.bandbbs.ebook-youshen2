<template>
  <div class="page" style="flex-direction: column;">
    <img if="{{allBookmarks.length === 0}}" src="/common/images/empty.png" style="position: absolute;left: 104px;top: 146px;width: 128px;height: 128px;" />
    <text if="{{allBookmarks.length === 0}}" style="position: absolute;left: 0px;top: 298px;width: 336px;line-height: 42px;font-weight:bold;font-size:32px;color:white;text-align:center;">暂无书签</text>

    <list class="list" if="{{allBookmarks.length > 0}}">
      <list-item for="{{visibleBookmarks}}" class="item" type="bookmark">
        <div class="text-content" @click="jumpTo($idx)">
          <marquee class="itemtext">{{$item.name}}</marquee>
          <text class="itemtext2">{{formatBookmarkLocation($item)}} | {{formatTime($item.time)}}</text>
        </div>
        <div class="button-container">
          <img src="/common/images/edit.png" @click="editBookmark($idx)" style="width: 72px; height: 72px;" />
          <img src="/common/images/delete.png" @click="deleteBookmark($idx)" style="width: 72px; height: 72px;" />
        </div>
      </list-item>
      <list-item type="pagination" class="pagination-container" if="{{totalPages > 1}}">
        <div class="pagination-controls">
          <img src="/common/images/pre.png" if="{{currentPage > 0}}" @click="prevPage" class="pagination-button"/>
          <text class="pagination-text">{{currentPage + 1}} / {{totalPages}}</text>
          <img src="/common/images/next.png" if="{{currentPage < totalPages - 1}}" @click="nextPage" class="pagination-button"/>
        </div>
      </list-item>
    </list>

    <img static src="/common/images/hd.png" style="position: absolute;left: 0px;top: 0px;width: 336px;height: 102px;" />
    <img static src="/common/images/back.png" @click="back" style="position: absolute;left: 6px;top: 6px;width: 72px;height: 72px;"/>
    <img static src="/common/images/info.png" @click="showBookmarkHelp" style="position: absolute;left: 258px;top: 6px;width: 72px;height: 72px;"/>
    <text style="position: absolute;left: 78px;top: 7px;width: 180px;line-height: 32px;font-weight:bold;font-size:24px;color:rgba(255,255,255,0.6);text-align:center;">
      {{nowTime}}
    </text>
    <text style="position: absolute;left: 78px;top: 35px;width: 180px;line-height: 42px;font-weight:bold;font-size:32px;color:white;text-align:center;">
      书签管理
    </text>
  </div>
</template>

<script>
import router from '@system.router'
import prompt from '@system.prompt'
import bookStorage from '../../common/bookStorage.js'

const PAGE_SIZE = 8;

export default {
  private: {
    allBookmarks: [],
    visibleBookmarks: [],
    currentPage: 0,
    totalPages: 1,
    nowTime: "00:00",
    timer: null
  },
  protected: {
    name: ''
  },
  updateTime() {
    const date = new Date();
    let hours = date.getHours();
    let minutes = date.getMinutes();
    hours = hours < 10 ? '0' + hours : hours;
    minutes = minutes < 10 ? '0' + minutes : minutes;
    this.nowTime = `${hours}:${minutes}`;
  },
  onInit() {
    this.updateTime();
    this.timer = setInterval(() => {
      this.updateTime();
    }, 1000);
  },
  onShow() {
    this.loadBookmarks();
  },
  onDestroy() {
    clearInterval(this.timer);
  },
  async loadBookmarks() {
    const progress = await bookStorage.get(this.name);
    this.allBookmarks = progress.bookmarks || [];
    this.totalPages = Math.ceil(this.allBookmarks.length / PAGE_SIZE) || 1;
    this.currentPage = 0;
    this.updateVisibleBookmarks();
  },
  updateVisibleBookmarks() {
    const start = this.currentPage * PAGE_SIZE;
    const end = start + PAGE_SIZE;
    this.visibleBookmarks = this.allBookmarks.slice(start, end);
  },
  prevPage() {
    if (this.currentPage > 0) {
        this.currentPage--;
        this.updateVisibleBookmarks();
    }
  },
  nextPage() {
    if (this.currentPage < this.totalPages - 1) {
        this.currentPage++;
        this.updateVisibleBookmarks();
    }
  },
  async jumpTo(index) {
    const realIndex = this.currentPage * PAGE_SIZE + index;
    const bookmark = this.allBookmarks[realIndex];
    const progress = await bookStorage.get(this.name);

    progress.chapterIndex = bookmark.chapterIndex;
    progress.offsetInChapter = bookmark.offsetInChapter;
    progress.scrollOffset = bookmark.scrollOffset;

    try {
      await bookStorage.set(this.name, progress);
      prompt.showToast({ message: '正在跳转...', duration: 500 });
      globalThis.justJumpedFromBookmark = true;
      router.back();
    } catch (e) {
      prompt.showToast({ message: '跳转失败', duration: 2000 });
    }
  },
  deleteBookmark(index) {
    const realIndex = this.currentPage * PAGE_SIZE + index;
    router.push({
        uri: '/pages/confirm',
        params: {
            action: 'deleteBookmark',
            title: '删除书签',
            confirmText: `确认删除此书签吗？`,
            subText: '此操作不可恢复',
            bookName: this.name,
            bookmarkIndex: realIndex
        }
    });
  },
  formatBookmarkLocation(bookmark) {
    if (bookmark && bookmark.chapterName) {
        return bookmark.chapterName;
    }
    return '未知章节';
  },
  formatTime(timestamp) {
    if (!timestamp) return '';
    const date = new Date(timestamp);
    const month = ('0' + (date.getMonth() + 1)).slice(-2);
    const day = ('0' + date.getDate()).slice(-2);
    const hours = ('0' + date.getHours()).slice(-2);
    const minutes = ('0' + date.getMinutes()).slice(-2);
    return `${month}-${day} ${hours}:${minutes}`;
  },
  showBookmarkHelp() {
      router.push({
          uri: '/pages/help',
          params: {
              title: '书签帮助',
              content: '长按书签可修改书签名称。\n长按阅读页的书签按钮可快速进入书签管理页面。'
          }
      });
  },
  editBookmark(index) {
      const realIndex = this.currentPage * PAGE_SIZE + index;
      const bookmark = this.allBookmarks[realIndex];
      router.push({
          uri: '/pages/editBookmark',
          params: {
              bookName: this.name,
              bookmarkIndex: realIndex,
              currentName: bookmark.name
          }
      });
  },
  back() {
    router.back();
  }
}
</script>

<style>
.page {
  width: 336px;
  height: 480px;
  background-color: #000000;
}

.list {
  width: 336px;
  height: 480px;
  position: absolute;
  top: 0px;
  left: 0px;
  padding: 86px 6px;
}

.item {
  width: 100%;
  height: 190px;
  padding: 14px 20px;
  margin-bottom: 8px;
  background-color: #262626;
  border-radius: 36px;
  flex-direction: column;
  justify-content: space-between;
  align-items: stretch;
}

.text-content {
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  width: 100%;
  padding: 5px;
  flex-grow: 1;
}

.itemtext {
  font-size: 32px;
  line-height: 40px;
  width: 100%;
  font-weight: bold;
  color: white;
}

.itemtext2 {
  font-size: 24px;
  line-height: 32px;
  font-weight: bold;
  color: rgba(255, 255, 255, 0.6);
  margin-top: 4px;
  lines: 2;
}

.button-container {
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
  width: 100%;
  margin-top: 8px;
  flex-shrink: 0;
}

.pagination-container {
    width: 100%;
    height: 80px;
    justify-content: center;
    align-items: center;
}

.pagination-controls {
    width: 100%;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
    padding: 0 8px;
}
.pagination-button {
    width: 72px;
    height: 72px;
}
.pagination-text {
    font-size: 28px;
    font-weight: bold;
    color: white;
}
</style>
